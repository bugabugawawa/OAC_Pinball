# Colocar as funcoes relacionadas a UI
.macro alterScore( %number %scorePlace ) # altera o score recebendo tres IMM
	la a0 %number
	li a1 %scorePlace			# endereco destino dentro da bitmap
	lw a2 4(a0) 				# altura
	lw a3 0(a0) 				# largura
	addi a0 a0 8				# vetor de bytes origem 
	for_linhas:	
		blez a2 fim	# enquanto a2 > 0 print
		mv t0 a1			# endereco do inicio linha atual
		mv t1 a3			# t1 = largura
		for_colunas:	
			blez t1 fim_da_largura # enquanto t1 > 0
			lw t2 0(a0)		# le uma word do vetor
			sw t2 0(t0)		# Salva no display a word lida do vetor 
			addi a0 a0 4		# a0 += 1
			addi t0 t0 4		# t0 += 1
			addi t1 t1 -4		# t1 -=1
			j for_colunas
		fim_da_largura:
			addi a1 a1 320 		# desceu uma linha
			addi a2 a2 -1		# a2--
			j for_linhas
	fim:
	
.end_macro

# Colocar as funcoes relacionadas a UI
.macro alterScore( %scorePlace ) # altera o score recebendo tres IMM
	li a1 %scorePlace			# endereco destino dentro da bitmap
	lw a2 4(a0) 				# altura
	lw a3 0(a0) 				# largura
	addi a0 a0 8				# vetor de bytes origem 
	for_linhas:	
		blez a2 fim	# enquanto a2 > 0 print
		mv t0 a1			# endereco do inicio linha atual
		mv t1 a3			# t1 = largura
		for_colunas:	
			blez t1 fim_da_largura # enquanto t1 > 0
			lw t2 0(a0)		# le uma word do vetor
			sw t2 0(t0)		# Salva no display a word lida do vetor 
			addi a0 a0 4		# a0 += 1
			addi t0 t0 4		# t0 += 1
			addi t1 t1 -4		# t1 -=1
			j for_colunas
		fim_da_largura:
			addi a1 a1 320 		# desceu uma linha
			addi a2 a2 -1		# a2--
			j for_linhas
	fim:
	
.end_macro
